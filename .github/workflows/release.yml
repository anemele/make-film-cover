name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:

  test:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        default: true
        target: x86_64-pc-windows-msvc
    - name: Test
      uses: actions-rs/cargo@v1
      with:
        command: test

  build:
    needs: [test]
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        default: true
        target: x86_64-pc-windows-msvc
    - name: Release build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release
    - uses: actions/upload-artifact@v4
      with:
        name: x86_64-pc-windows-msvc
        path: target/release/mfc.exe

  package-portable:
    needs: [build,test]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Export version
      run: |
        export VERSION=$(echo $GH_REF | sed 's:refs/tags/v::')
        echo "VERSION=$VERSION" >> $GITHUB_ENV
      env:
          GH_REF: ${{ github.ref }}
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: x86_64-pc-windows-msvc
        path: target
    - name: Create archive
      run: |
        mkdir public
        cd target
        zip ../public/mfc-${{ env.VERSION }}-x86_64-pc-windows-msvc.zip mfc.exe
        cd -
    - uses: actions/upload-artifact@v4
      with:
        name: archive
        path: public/*.*

  deploy-github-release-binaries:
    needs: [package-portable]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: archive
        path: public
    - name: Release
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: "public/*.*"
        allowUpdates: true
        prerelease: false
